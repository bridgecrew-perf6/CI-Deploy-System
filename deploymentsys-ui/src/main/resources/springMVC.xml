<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<context:annotation-config />

	<context:component-scan
		base-package="com.deploymentsys.ui.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 让DispatchServlet启动基于annotation的HandlerMapping -->
	<mvc:annotation-driven>
		<mvc:message-converters
			register-defaults="true">
			<!-- 解决Controller返回json中文乱码问题 -->
			<bean
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:default-servlet-handler />

	<!-- 注意location的配置！！！ -->
	<mvc:resources mapping="/favicon.ico" location="/" />

	<!-- 3.2 配置多个视图解析 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="viewResolvers">
			<list>
				<!--自定义视图解析器 -->
				<bean id="myViewResolver"
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="com.deploymentsys.ui.viewresolver.MyResourceView" />
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
					<property name="order" value="0" />
				</bean>

				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/WEB-INF/html/" />
					<property name="suffix" value=".html" />
					<property name="order" value="1" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- 配置文件上传类型解析器 multipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件最大尺寸，单位为B -->
		<property name="maxUploadSize" value="5242880" />
	</bean>

	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<mvc:interceptor>
			<!-- 进行拦截：/**表示拦截所有controller -->
			<mvc:mapping path="/logout" />
			<mvc:mapping path="/loginpost" />
			<!-- 不进行拦截 -->
			<!--<mvc:exclude-mapping path="/index.html" /> -->

			<bean class="com.deploymentsys.ui.interceptors.MyInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
</beans>
